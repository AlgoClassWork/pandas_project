import pandas as pd

# === 1. –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
df = pd.read_csv("countries.csv")

# –£–¥–∞–ª–∏–º –ø—Ä–æ–±–µ–ª—ã
df["Country"] = df["Country"].str.strip()
df["Region"] = df["Region"].str.strip()

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç–æ–ª–±—Ü—ã —Å –∑–∞–ø—è—Ç—ã–º–∏ –≤ —á–∏—Å–ª–æ–≤—ã–µ
cols_to_fix = [
    'Pop. Density (per sq. mi.)', 'Coastline (coast/area ratio)', 'Net migration',
    'Infant mortality (per 1000 births)', 'Literacy (%)', 'Phones (per 1000)',
    'Arable (%)', 'Crops (%)', 'Other (%)', 'Climate', 'Birthrate', 'Deathrate',
    'Agriculture', 'Industry', 'Service'
]
for col in cols_to_fix:
    df[col] = df[col].astype(str).str.replace(',', '.')
    df[col] = pd.to_numeric(df[col], errors='coerce')

# –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–ø—É—Å–∫–∏ –º–µ–¥–∏–∞–Ω–∞–º–∏
df = df.fillna(df.median(numeric_only=True))

print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ 15 –≥–∏–ø–æ—Ç–µ–∑ —á–µ—Ä–µ–∑ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é ===\n")

# === –ì–∏–ø–æ—Ç–µ–∑–∞ 1 ===
by_region = df.groupby('Region')['GDP ($ per capita)'].mean().sort_values(ascending=False)
print("1Ô∏è‚É£ –°—Ä–µ–¥–Ω–∏–π –í–í–ü –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º (–ï–≤—Ä–æ–ø–∞ vs –ê—Ñ—Ä–∏–∫–∞):")
print(by_region[['WESTERN EUROPE', 'SUB-SAHARAN AFRICA']])
if by_region['WESTERN EUROPE'] > by_region['SUB-SAHARAN AFRICA']:
    print("‚úÖ –ï–≤—Ä–æ–ø–∞ –±–æ–≥–∞—á–µ –ê—Ñ—Ä–∏–∫–∏ –ø–æ —Å—Ä–µ–¥–Ω–µ–º—É –í–í–ü.\n")
else:
    print("‚ùå –ì–∏–ø–æ—Ç–µ–∑–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# === –ì–∏–ø–æ—Ç–µ–∑–∞ 2 ===
sea = df[df['Coastline (coast/area ratio)'] > 0]['GDP ($ per capita)'].mean()
no_sea = df[df['Coastline (coast/area ratio)'] == 0]['GDP ($ per capita)'].mean()
print("2Ô∏è‚É£ –í—ã—Ö–æ–¥ –∫ –º–æ—Ä—é –∏ –í–í–ü:")
print(f"   –°—Ä–µ–¥–Ω–∏–π –í–í–ü —Å –≤—ã—Ö–æ–¥–æ–º –∫ –º–æ—Ä—é: {sea:.0f}")
print(f"   –°—Ä–µ–¥–Ω–∏–π –í–í–ü –±–µ–∑ –≤—ã—Ö–æ–¥–∞ –∫ –º–æ—Ä—é: {no_sea:.0f}")
if sea > no_sea:
    print("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: —Å—Ç—Ä–∞–Ω—ã —Å –≤—ã—Ö–æ–¥–æ–º –∫ –º–æ—Ä—é –±–æ–≥–∞—á–µ.\n")
else:
    print("‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# === –ì–∏–ø–æ—Ç–µ–∑–∞ 3 ===
climate_gdp = df.groupby('Climate')['GDP ($ per capita)'].mean()
print("3Ô∏è‚É£ –ö–ª–∏–º–∞—Ç –∏ –í–í–ü:")
print(climate_gdp)
print("‚úÖ –ï—Å–ª–∏ —É –∫–ª–∏–º–∞—Ç–∞ 3 (—É–º–µ—Ä–µ–Ω–Ω—ã–π) —Å—Ä–µ–¥–Ω–∏–π –í–í–ü –≤—ã—à–µ, –≥–∏–ø–æ—Ç–µ–∑–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# === –ì–∏–ø–æ—Ç–µ–∑–∞ 4 ===
lit_reg = df.groupby('Region')['Literacy (%)'].mean()
print("4Ô∏è‚É£ –£—Ä–æ–≤–µ–Ω—å –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º (–ï–≤—Ä–æ–ø–∞ vs –ê—Ñ—Ä–∏–∫–∞):")
print(lit_reg[['WESTERN EUROPE', 'SUB-SAHARAN AFRICA']])
if lit_reg['WESTERN EUROPE'] > lit_reg['SUB-SAHARAN AFRICA']:
    print("‚úÖ –ï–≤—Ä–æ–ø–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–µ–µ –ê—Ñ—Ä–∏–∫–∏.\n")
else:
    print("‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# === –ì–∏–ø–æ—Ç–µ–∑–∞ 5 ===
mortality = df.groupby('Region')['Infant mortality (per 1000 births)'].mean().sort_values(ascending=False)
print("5Ô∏è‚É£ –°—Ä–µ–¥–Ω—è—è –º–ª–∞–¥–µ–Ω—á–µ—Å–∫–∞—è —Å–º–µ—Ä—Ç–Ω–æ—Å—Ç—å –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º:")
print(mortality.head())
print("‚úÖ –ï—Å–ª–∏ –ê—Ñ—Ä–∏–∫–∞ –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ ‚Äî –≥–∏–ø–æ—Ç–µ–∑–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# === –ì–∏–ø–æ—Ç–µ–∑–∞ 6 ===
high_industry = df[df['Industry'] > 0.3]['GDP ($ per capita)'].mean()
low_industry = df[df['Industry'] <= 0.3]['GDP ($ per capita)'].mean()
print("6Ô∏è‚É£ –í–ª–∏—è–Ω–∏–µ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏ –Ω–∞ –í–í–ü:")
print(f"   –í–í–ü –ø—Ä–∏ Industry > 0.3: {high_industry:.0f}")
print(f"   –í–í–ü –ø—Ä–∏ Industry <= 0.3: {low_industry:.0f}")
if high_industry > low_industry:
    print("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: –∏–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã –±–æ–≥–∞—á–µ.\n")
else:
    print("‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# === –ì–∏–ø–æ—Ç–µ–∑–∞ 7 ===
agro = df[df['Agriculture'] > 0.3]['Literacy (%)'].mean()
other = df[df['Agriculture'] <= 0.3]['Literacy (%)'].mean()
print("7Ô∏è‚É£ –ê–≥—Ä–æ—ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å:")
print(f"   –°—Ä–µ–¥–Ω—è—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏ Agriculture > 0.3: {agro:.1f}")
print(f"   –°—Ä–µ–¥–Ω—è—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏ Agriculture <= 0.3: {other:.1f}")
if agro < other:
    print("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: –∞–≥—Ä–∞—Ä–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã –º–µ–Ω–µ–µ –≥—Ä–∞–º–æ—Ç–Ω—ã.\n")
else:
    print("‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# === –ì–∏–ø–æ—Ç–µ–∑–∞ 8 ===
high_phone = df[df['Phones (per 1000)'] > 300]['Literacy (%)'].mean()
low_phone = df[df['Phones (per 1000)'] <= 300]['Literacy (%)'].mean()
print("8Ô∏è‚É£ –¢–µ–ª–µ—Ñ–æ–Ω–∏–∑–∞—Ü–∏—è –∏ –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å:")
print(f"   –ì—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏ >300 —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤: {high_phone:.1f}")
print(f"   –ì—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏ <=300 —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤: {low_phone:.1f}")
if high_phone > low_phone:
    print("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: –±–æ–ª—å—à–µ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ ‚Äî –≤—ã—à–µ –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å.\n")
else:
    print("‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# === –ì–∏–ø–æ—Ç–µ–∑–∞ 9 ===
high_birth = df[df['Birthrate'] > 25]['GDP ($ per capita)'].mean()
low_birth = df[df['Birthrate'] <= 25]['GDP ($ per capita)'].mean()
print("9Ô∏è‚É£ –†–æ–∂–¥–∞–µ–º–æ—Å—Ç—å –∏ –í–í–ü:")
print(f"   –í–í–ü –ø—Ä–∏ –≤—ã—Å–æ–∫–æ–π —Ä–æ–∂–¥–∞–µ–º–æ—Å—Ç–∏: {high_birth:.0f}")
print(f"   –í–í–ü –ø—Ä–∏ –Ω–∏–∑–∫–æ–π —Ä–æ–∂–¥–∞–µ–º–æ—Å—Ç–∏: {low_birth:.0f}")
if high_birth < low_birth:
    print("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: –≤—ã—Å–æ–∫–∞—è —Ä–æ–∂–¥–∞–µ–º–æ—Å—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω–∞ –¥–ª—è –±–µ–¥–Ω—ã—Ö —Å—Ç—Ä–∞–Ω.\n")
else:
    print("‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# === –ì–∏–ø–æ—Ç–µ–∑–∞ 10 ===
high_ind = df[df['Industry'] > 0.3]['Deathrate'].mean()
low_ind = df[df['Industry'] <= 0.3]['Deathrate'].mean()
print("üîü –ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Å–º–µ—Ä—Ç–Ω–æ—Å—Ç—å:")
print(f"   –°—Ä–µ–¥–Ω—è—è —Å–º–µ—Ä—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏ Industry > 0.3: {high_ind:.2f}")
print(f"   –°—Ä–µ–¥–Ω—è—è —Å–º–µ—Ä—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏ Industry <= 0.3: {low_ind:.2f}")
if high_ind < low_ind:
    print("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: –∏–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã –∏–º–µ—é—Ç –Ω–∏–∂–µ —Å–º–µ—Ä—Ç–Ω–æ—Å—Ç—å.\n")
else:
    print("‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# === –ì–∏–ø–æ—Ç–µ–∑–∞ 11 ===
df['Density_group'] = pd.cut(df['Pop. Density (per sq. mi.)'],
                             bins=[0, 50, 200, 1000, 10000],
                             labels=['–Ω–∏–∑–∫–∞—è','—Å—Ä–µ–¥–Ω—è—è','–≤—ã—Å–æ–∫–∞—è','–æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è'])
density_phone = df.groupby('Density_group')['Phones (per 1000)'].mean()
print("11Ô∏è‚É£ –ü–ª–æ—Ç–Ω–æ—Å—Ç—å –Ω–∞—Å–µ–ª–µ–Ω–∏—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∏–∑–∞—Ü–∏—è:")
print(density_phone)
print("‚úÖ –ï—Å–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∏–∑–∞—Ü–∏—è —Ä–∞—Å—Ç—ë—Ç —Å –ø–ª–æ—Ç–Ω–æ—Å—Ç—å—é ‚Äî –≥–∏–ø–æ—Ç–µ–∑–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# === –ì–∏–ø–æ—Ç–µ–∑–∞ 12 ===
urban = df[df['Pop. Density (per sq. mi.)'] > 200]['Agriculture'].mean()
rural = df[df['Pop. Density (per sq. mi.)'] <= 200]['Agriculture'].mean()
print("12Ô∏è‚É£ –£—Ä–±–∞–Ω–∏–∑–∞—Ü–∏—è –∏ —Å–µ–ª—å—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ:")
print(f"   Agriculture –ø—Ä–∏ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ >200: {urban:.2f}")
print(f"   Agriculture –ø—Ä–∏ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ <=200: {rural:.2f}")
if urban < rural:
    print("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: –≥–æ—Ä–æ–¥–∞ –º–µ–Ω—å—à–µ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞.\n")
else:
    print("‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# === –ì–∏–ø–æ—Ç–µ–∑–∞ 13 ===
service_high = df[df['Service'] > 0.5]['GDP ($ per capita)'].mean()
service_low = df[df['Service'] <= 0.5]['GDP ($ per capita)'].mean()
print("13Ô∏è‚É£ –°—Ñ–µ—Ä–∞ —É—Å–ª—É–≥ –∏ –í–í–ü:")
print(f"   –í–í–ü –ø—Ä–∏ Service > 0.5: {service_high:.0f}")
print(f"   –í–í–ü –ø—Ä–∏ Service <= 0.5: {service_low:.0f}")
if service_high > service_low:
    print("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: —Å—Ç—Ä–∞–Ω—ã —Å —Ä–∞–∑–≤–∏—Ç–æ–π —Å—Ñ–µ—Ä–æ–π —É—Å–ª—É–≥ –±–æ–≥–∞—á–µ.\n")
else:
    print("‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# === –ì–∏–ø–æ—Ç–µ–∑–∞ 14 ===
positive = df[df['Net migration'] > 0]['GDP ($ per capita)'].mean()
negative = df[df['Net migration'] <= 0]['GDP ($ per capita)'].mean()
print("14Ô∏è‚É£ –ú–∏–≥—Ä–∞—Ü–∏—è –∏ –í–í–ü:")
print(f"   –í–í–ü –ø—Ä–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏: {positive:.0f}")
print(f"   –í–í–ü –ø—Ä–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏: {negative:.0f}")
if positive > negative:
    print("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: —Å—Ç—Ä–∞–Ω—ã, –∫—É–¥–∞ –µ–¥—É—Ç –ª—é–¥–∏, –±–æ–≥–∞—á–µ.\n")
else:
    print("‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# === –ì–∏–ø–æ—Ç–µ–∑–∞ 15 ===
large = df[df['Area (sq. mi.)'] > df['Area (sq. mi.)'].median()]['GDP ($ per capita)'].mean()
small = df[df['Area (sq. mi.)'] <= df['Area (sq. mi.)'].median()]['GDP ($ per capita)'].mean()
print("15Ô∏è‚É£ –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω—ã –∏ –í–í–ü:")
print(f"   –í–í–ü —É –±–æ–ª—å—à–∏—Ö —Å—Ç—Ä–∞–Ω: {large:.0f}")
print(f"   –í–í–ü —É –º–∞–ª—ã—Ö —Å—Ç—Ä–∞–Ω: {small:.0f}")
if large < small:
    print("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: –±–æ–ª—å—à–∏–µ —Å—Ç—Ä–∞–Ω—ã –Ω–µ –≤—Å–µ–≥–¥–∞ –±–æ–≥–∞—á–µ.\n")
else:
    print("‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö 15 –≥–∏–ø–æ—Ç–µ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
