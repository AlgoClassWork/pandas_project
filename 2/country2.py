import pandas as pd

# === 1. –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===

df = pd.read_csv("countries.csv")

# –£–¥–∞–ª–∏–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
df["Country"] = df["Country"].str.strip()
df["Region"] = df["Region"].str.strip()

# –°–ø–∏—Å–æ–∫ —Å—Ç–æ–ª–±—Ü–æ–≤, –≥–¥–µ —á–∏—Å–ª–∞ –∑–∞–ø–∏—Å–∞–Ω—ã —Å –∑–∞–ø—è—Ç—ã–º–∏
cols_to_fix = [
    'Pop. Density (per sq. mi.)', 'Coastline (coast/area ratio)', 'Net migration',
    'Infant mortality (per 1000 births)', 'Literacy (%)', 'Phones (per 1000)',
    'Arable (%)', 'Crops (%)', 'Other (%)', 'Climate', 'Birthrate', 'Deathrate',
    'Agriculture', 'Industry', 'Service'
]

# –ü—Ä–∏–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –∫ —á–∏—Å–ª–æ–≤–æ–º—É —Ç–∏–ø—É
for col in cols_to_fix:
    df[col] = df[col].astype(str).str.replace(',', '.')
    df[col] = df[col].apply(lambda x: pd.to_numeric(x, errors='coerce'))

# –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–ø—É—Å–∫–∏ –º–µ–¥–∏–∞–Ω–∞–º–∏
df = df.fillna(df.median(numeric_only=True))

# === 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–∏–ø–æ—Ç–µ–∑ ===

print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–∏–ø–æ—Ç–µ–∑ –æ —Ñ–∞–∫—Ç–æ—Ä–∞—Ö, –≤–ª–∏—è—é—â–∏—Ö –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏ –Ω–∞—Å–µ–ª–µ–Ω–∏—è:\n")

# --- –ì–∏–ø–æ—Ç–µ–∑–∞ 1 ---
corr1 = df['GDP ($ per capita)'].corr(df['Literacy (%)'])
print("1Ô∏è‚É£ –ì–∏–ø–æ—Ç–µ–∑–∞: –í–í–ü –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —É—Ä–æ–≤–Ω—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏ –Ω–∞—Å–µ–ª–µ–Ω–∏—è.")
print(f"   –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è: {corr1:.2f}")
if corr1 > 0.5:
    print("   ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏ —Å–≤—è–∑–∞–Ω —Å –≤—ã—Å–æ–∫–∏–º –í–í–ü.\n")
else:
    print("   ‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# --- –ì–∏–ø–æ—Ç–µ–∑–∞ 2 ---
corr2 = df['GDP ($ per capita)'].corr(df['Infant mortality (per 1000 births)'])
print("2Ô∏è‚É£ –ì–∏–ø–æ—Ç–µ–∑–∞: —á–µ–º –≤—ã—à–µ –í–í–ü, —Ç–µ–º –Ω–∏–∂–µ –º–ª–∞–¥–µ–Ω—á–µ—Å–∫–∞—è —Å–º–µ—Ä—Ç–Ω–æ—Å—Ç—å.")
print(f"   –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è: {corr2:.2f}")
if corr2 < -0.5:
    print("   ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: –≤—ã—Å–æ–∫–∏–π –í–í–ü —Å–≤—è–∑–∞–Ω —Å –Ω–∏–∑–∫–æ–π —Å–º–µ—Ä—Ç–Ω–æ—Å—Ç—å—é –º–ª–∞–¥–µ–Ω—Ü–µ–≤.\n")
else:
    print("   ‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# --- –ì–∏–ø–æ—Ç–µ–∑–∞ 3 ---
corr3 = df['GDP ($ per capita)'].corr(df['Phones (per 1000)'])
print("3Ô∏è‚É£ –ì–∏–ø–æ—Ç–µ–∑–∞: —á–µ–º –≤—ã—à–µ –í–í–ü, —Ç–µ–º –±–æ–ª—å—à–µ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –Ω–∞ 1000 —á–µ–ª–æ–≤–µ–∫.")
print(f"   –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è: {corr3:.2f}")
if corr3 > 0.5:
    print("   ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: –≤—ã—Å–æ–∫–∏–π –í–í–ü —Å–≤—è–∑–∞–Ω —Å –≤—ã—Å–æ–∫–∏–º —É—Ä–æ–≤–Ω–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∏–∑–∞—Ü–∏–∏.\n")
else:
    print("   ‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# --- –ì–∏–ø–æ—Ç–µ–∑–∞ 4 ---
corr4 = df['GDP ($ per capita)'].corr(df['Agriculture'])
print("4Ô∏è‚É£ –ì–∏–ø–æ—Ç–µ–∑–∞: —á–µ–º –±–æ–ª—å—à–µ –¥–æ–ª—è —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞, —Ç–µ–º –Ω–∏–∂–µ –í–í–ü.")
print(f"   –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è: {corr4:.2f}")
if corr4 < -0.5:
    print("   ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: –∞–≥—Ä–∞—Ä–Ω—ã–µ —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏–º–µ—é—Ç –Ω–∏–∂–µ –í–í–ü.\n")
else:
    print("   ‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# --- –ì–∏–ø–æ—Ç–µ–∑–∞ 5 ---
coast = df[df['Coastline (coast/area ratio)'] > 0]['GDP ($ per capita)'].mean()
no_coast = df[df['Coastline (coast/area ratio)'] == 0]['GDP ($ per capita)'].mean()
print("5Ô∏è‚É£ –ì–∏–ø–æ—Ç–µ–∑–∞: —Å—Ç—Ä–∞–Ω—ã, –∏–º–µ—é—â–∏–µ –≤—ã—Ö–æ–¥ –∫ –º–æ—Ä—é, –±–æ–≥–∞—á–µ.")
print(f"   –°—Ä–µ–¥–Ω–∏–π –í–í–ü –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∫ –º–æ—Ä—é: {coast:.0f}")
print(f"   –°—Ä–µ–¥–Ω–∏–π –í–í–ü –±–µ–∑ –≤—ã—Ö–æ–¥–∞ –∫ –º–æ—Ä—é: {no_coast:.0f}")
if coast > no_coast:
    print("   ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: —Å—Ç—Ä–∞–Ω—ã —Å –≤—ã—Ö–æ–¥–æ–º –∫ –º–æ—Ä—é –∏–º–µ—é—Ç –≤—ã—à–µ —Å—Ä–µ–¥–Ω–∏–π –í–í–ü.\n")
else:
    print("   ‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# --- –ì–∏–ø–æ—Ç–µ–∑–∞ 6 ---
corr6 = df['Literacy (%)'].corr(df['Infant mortality (per 1000 births)'])
print("6Ô∏è‚É£ –ì–∏–ø–æ—Ç–µ–∑–∞: —á–µ–º –≤—ã—à–µ —É—Ä–æ–≤–µ–Ω—å –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏, —Ç–µ–º –Ω–∏–∂–µ –º–ª–∞–¥–µ–Ω—á–µ—Å–∫–∞—è —Å–º–µ—Ä—Ç–Ω–æ—Å—Ç—å.")
print(f"   –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è: {corr6:.2f}")
if corr6 < -0.5:
    print("   ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å —Å–Ω–∏–∂–∞–µ—Ç –¥–µ—Ç—Å–∫—É—é —Å–º–µ—Ä—Ç–Ω–æ—Å—Ç—å.\n")
else:
    print("   ‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# --- –ì–∏–ø–æ—Ç–µ–∑–∞ 7 ---
by_region = df.groupby('Region')['GDP ($ per capita)'].mean().sort_values(ascending=False)
print("7Ô∏è‚É£ –ì–∏–ø–æ—Ç–µ–∑–∞: —Å—Ä–µ–¥–Ω–∏–π –í–í–ü –≤ –ï–≤—Ä–æ–ø–µ –≤—ã—à–µ, —á–µ–º –≤ –ê—Ñ—Ä–∏–∫–µ.")
print(by_region[['WESTERN EUROPE', 'NORTHERN AFRICA', 'SUB-SAHARAN AFRICA']])
if by_region['WESTERN EUROPE'] > by_region['SUB-SAHARAN AFRICA']:
    print("   ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: –ï–≤—Ä–æ–ø–∞ –±–æ–≥–∞—á–µ –ê—Ñ—Ä–∏–∫–∏ –ø–æ —Å—Ä–µ–¥–Ω–µ–º—É –í–í–ü.\n")
else:
    print("   ‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# --- –ì–∏–ø–æ—Ç–µ–∑–∞ 8 ---
corr8 = df['Birthrate'].corr(df['GDP ($ per capita)'])
print("8Ô∏è‚É£ –ì–∏–ø–æ—Ç–µ–∑–∞: —á–µ–º –≤—ã—à–µ —Ä–æ–∂–¥–∞–µ–º–æ—Å—Ç—å, —Ç–µ–º –Ω–∏–∂–µ –í–í–ü.")
print(f"   –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è: {corr8:.2f}")
if corr8 < -0.5:
    print("   ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: –≤—ã—Å–æ–∫–∞—è —Ä–æ–∂–¥–∞–µ–º–æ—Å—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω–∞ –¥–ª—è –±–µ–¥–Ω—ã—Ö —Å—Ç—Ä–∞–Ω.\n")
else:
    print("   ‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# --- –ì–∏–ø–æ—Ç–µ–∑–∞ 9 ---
corr9 = df['Deathrate'].corr(df['GDP ($ per capita)'])
print("9Ô∏è‚É£ –ì–∏–ø–æ—Ç–µ–∑–∞: —á–µ–º –≤—ã—à–µ —Å–º–µ—Ä—Ç–Ω–æ—Å—Ç—å, —Ç–µ–º –Ω–∏–∂–µ –í–í–ü.")
print(f"   –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è: {corr9:.2f}")
if corr9 < -0.5:
    print("   ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: –≤ —Å—Ç—Ä–∞–Ω–∞—Ö —Å –≤—ã—Å–æ–∫–æ–π —Å–º–µ—Ä—Ç–Ω–æ—Å—Ç—å—é –Ω–∏–∂–µ –í–í–ü.\n")
else:
    print("   ‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

# --- –ì–∏–ø–æ—Ç–µ–∑–∞ 10 ---
corr10 = df['Service'].corr(df['Literacy (%)'])
print("üîü –ì–∏–ø–æ—Ç–µ–∑–∞: —á–µ–º –≤—ã—à–µ –¥–æ–ª—è —Å—Ñ–µ—Ä—ã —É—Å–ª—É–≥, —Ç–µ–º –≤—ã—à–µ —É—Ä–æ–≤–µ–Ω—å –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏.")
print(f"   –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è: {corr10:.2f}")
if corr10 > 0.5:
    print("   ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è: —Ä–∞–∑–≤–∏—Ç–∞—è —Å—Ñ–µ—Ä–∞ —É—Å–ª—É–≥ —Å–≤—è–∑–∞–Ω–∞ —Å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–º –Ω–∞—Å–µ–ª–µ–Ω–∏–µ–º.\n")
else:
    print("   ‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è.\n")

print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ 10 –≥–∏–ø–æ—Ç–µ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
